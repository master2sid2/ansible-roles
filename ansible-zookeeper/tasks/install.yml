---
- name: Create Zookeeper group
  ansible.builtin.group:
    name: "{{ zookeeper_group }}"
    state: present

- name: Create Zookeeper user
  ansible.builtin.user:
    name: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    shell: /sbin/nologin
    home: "{{ zookeeper_home }}"
    state: present
    create_home: no

- name: Download Zookeeper
  ansible.builtin.get_url:
    url: "{{ zookeeper_url }}"
    dest: "/tmp/zookeeper-{{ zookeeper_version }}.tar.gz"

- name: Extracting Zookeeper
  ansible.builtin.unarchive:
    src: "/tmp/zookeeper-{{ zookeeper_version }}.tar.gz"
    dest: "/opt"
    remote_src: yes
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"

- name: Fix ownership of extracted Zookeeper directory
  ansible.builtin.file:
    path: "{{ zookeeper_install }}"
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    recurse: yes

- name: Create Zookeeper home symlink
  ansible.builtin.file:
    src: "{{ zookeeper_install }}"
    dest: "{{ zookeeper_home }}"
    state: link

- name: Create Zookeeper data directory
  ansible.builtin.file:
    path: "{{ zookeeper_data }}"
    state: directory
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    mode: '0755'

- name: Create systemd unit
  ansible.builtin.template:
    src: zookeeper.service.j2
    dest: /etc/systemd/system/zookeeper.service
    mode: '0644'
  notify: Reload systemd

- name: Remove Zookeeper archive
  ansible.builtin.file:
    path: "/tmp/zookeeper-{{ zookeeper_version }}.tar.gz"
    state: absent
